无符号整型 unsigned int a;  %u
sizeof求数组长度，strlen求数组中储存的字符串的长度
算数运算符自左向右结合，赋值运算符自右向左结合。多重赋值。a+=a-=a*a属于赋值运算符
求余运算的两操作数必须是整型， 不能是浮点型。
m=n++  先将n赋值给m，n再加加。m=--n  先n--再将n赋值给m。(a+b)++是不正确的。
#define PI 3.1416宏定义只是傻瓜式的进行字符串替换，有时会产生意想不到的结果。
const double PI =3.1416;  常变量
C编译器在对操作数进行预算之前将所有的操作数都转换成取值范围较大的操作数类型，称为类型提升。
必然的转换：float-double    整数提升：char、short-int
赋值时的自动类型转换：右侧表达式类型服从左侧变量类型
强转换：int a=7;(float)a/2=%f=3.500000
1/2在整型运算表达式中值为0，若想得到小数结果，需写成*0.5或强转换
'\t'转义字符，水平制表符，光标并不是向后移动一个tab的宽度，而是移到下一个制表位
"  '  ?  \  前面加上一个 \ 作为转义字符，代表其本身；
%%输出一个%；%d输出带符号的十进制整数；%o输出无符号八进制整数；%g自选f或e输出，不输出无意义的0；%e指数形式输出；
对字符的ASCII码值操作时，算式中直接写'字符'，不要写其ASCII值;a=a+'b';
%c 输入一个字符，空格、回车、制表符也做为有效字符输入，若要防止空格占用字符位置，可在%c前加一个空格，这样输入时就会略过空格，或者使用%*c，或者用getchar（）装下那个空格
%s 输入字符串，遇到空白字符时默认读入结束
scanf在输入数值型数据时，遇到空格、回车、制表符、非法字符、达到规定域宽时停止，即使还有变量未赋值，未赋值的变量为随机值
scanf中什么格式，输入就要按什么格式输入
scanf可以规定输入域宽，不可规定输入精度
scanf函数有返回值，其值为成功读入数据的个数，可借此判断数据读入个数是否达到预期，但不能完全保证正确读入（详情见苏小红版p89）
判断scanf函数是否正常读取内容：scanf的返回值是其读取的项的个数。
int ret=scanf("%d",&a);
while(ret!=预期个数）{
while (getchar()!='\n');
printf("请输入正确的字符");
ret=scanf("%d",&a);}
假如要将三个整数输入，而ret的值为2，说明scanf在读取过程中遇到错误字符导致读取结束，只读取进去两个整数，此时需要用getchar继续读完所有字符，printf提示用户重新输入字符，防止先前的字符影响第二次的读取
关系运算符中，≥＞＜≤优先级高于==和！=，优先级都低于算术运算符
三元运算符：表达式1？表达式2:表达式3  max=a>b?a:b;表达式1应输出一个非0或0（真或假），来对max取哪个值进行判断
判断浮点型数字是否==0时，要将其fabs（）绝对值与1e-6比较
exit(0)终止程序执行，强制返回操作系统
switch(a){case 1:执行语句;break;case 2:执行语句;break;default:执行语句;};
x<<n把x的每一位左平移n位，相当于x*2^n
x>>n把x的每一位右平移n位，相当于x/2^n
rand()函数，头文件为<stdlib.h>，随机产生一个0~RAND_MAX之间的整数（0~32767），rand()%d将函数rand()生成的随机数变化在0~d-1内，rand()%b+a范围平移到a~a+b-1内，一个程序不论运行多少次，其随机值不变
若想实现真正的随机值，需要调用srand()函数
srand(1);将随机数种子设为1，不同种子rand值不同
srand(time(NULL));函数time返回以秒计算的日历时间，使用NULL作为time的参数时，返回值被转换为一个无符号整数课作为随机数发生器的种子，实现rand函数的真随机，使用<time.h>头文件
goto语句使用格式：goto 语句标号;         语句标号：   
goto函数的优势：可直接跳出多重循环。跳向共同的出口位置，进行推出前的错误处理工作。
for（语句一；语句二；语句三）continue;  continue的执行不影响语句三的执行。而在while{}语句中执行continue时会略过其后的i++





























  

//<math.h>
  sqrt()求根  返回double型  %lf (float)整型变量
  fabs()求绝对值 返回double型
